{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reina\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Project\\\\my-app\\\\src\\\\Components\\\\TaskList\\\\taskList.js\",\n    _s = $RefreshSig$();\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './taskList.css';\nimport AddTask from \"../AddTask/addTask\";\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport { getLocalTasks, updateValues } from '../../services/localStorageService';\nimport { useState } from 'react'; // Component que renderiza as tasks registradas para uma data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskList(_ref) {\n  _s();\n\n  let {\n    date,\n    stateTasks,\n    stateAction\n  } = _ref;\n  const [modalIsOpen, setIsOpen] = useState(false);\n  const dataFormatada = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n\n  const removeTask = task => {\n    console.log(task.taskValue);\n    const taskFiltered = stateTasks.tasks.filter(taskItem => taskItem.taskValue != task.taskValue);\n    console.log(taskFiltered);\n    updateValues(date, taskFiltered);\n    stateAction({\n      tasks: taskFiltered\n    });\n  };\n\n  const constructTasks = () => {\n    const tasksElements = [];\n    if (stateTasks.tasks && stateTasks.tasks.length > 0) stateTasks.tasks.forEach(task => {\n      tasksElements.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          fontSize: 13,\n          icon: faCircleArrowRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: task.taskValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: [\"| \", task.hourValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            removeTask(task);\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            fontSize: 13,\n            color: 'red',\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this));\n    });else tasksElements.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Nehuma atividade planejada para hoje!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }, this));\n    return tasksElements;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        children: [\"Atividades para \", dataFormatada, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), constructTasks()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsOpen(true),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlusCircle,\n          color: 'green',\n          fontSize: 25\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      date: date,\n      isVisible: modalIsOpen,\n      onClose: () => {\n        setIsOpen(false);\n        const newTasks = getLocalTasks(date);\n        stateAction({\n          tasks: newTasks\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskList, \"EOxo+0MXKxyCdUCTWpcfchJ0gFI=\");\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["FontAwesomeIcon","faCircleArrowRight","faTrash","AddTask","faPlusCircle","getLocalTasks","updateValues","useState","TaskList","date","stateTasks","stateAction","modalIsOpen","setIsOpen","dataFormatada","getDate","getMonth","getFullYear","removeTask","task","console","log","taskValue","taskFiltered","tasks","filter","taskItem","constructTasks","tasksElements","length","forEach","push","hourValue","newTasks"],"sources":["C:/Users/reina/OneDrive/Área de Trabalho/Project/my-app/src/Components/TaskList/taskList.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCircleArrowRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport './taskList.css';\r\nimport AddTask from \"../AddTask/addTask\";\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { getLocalTasks, updateValues } from '../../services/localStorageService';\r\nimport { useState } from 'react';\r\n\r\n// Component que renderiza as tasks registradas para uma data\r\nfunction TaskList({ date, stateTasks, stateAction }) {\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const dataFormatada = ((date.getDate())) + \"/\" + ((date.getMonth() + 1)) + \"/\" + date.getFullYear();\r\n\r\n    const removeTask = (task) => {\r\n        console.log(task.taskValue)\r\n        const taskFiltered = stateTasks.tasks.filter(taskItem => taskItem.taskValue != task.taskValue);\r\n        console.log(taskFiltered)\r\n        updateValues(date, taskFiltered);\r\n        stateAction({  tasks: taskFiltered });\r\n    }\r\n\r\n    const constructTasks = () => {\r\n        const tasksElements = [];\r\n        if (stateTasks.tasks && stateTasks.tasks.length > 0)\r\n            stateTasks.tasks.forEach(task => {\r\n                tasksElements.push(\r\n                    <div className='task-container'>\r\n                        <FontAwesomeIcon fontSize={13} icon={faCircleArrowRight} />\r\n                        <text>\r\n                            {task.taskValue}\r\n                        </text>\r\n                        <text>\r\n                            | {task.hourValue}\r\n                        </text>\r\n                        <button onClick={() => { removeTask(task) }}>\r\n                            <FontAwesomeIcon fontSize={13} color={'red'} icon={faTrash} />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            });\r\n        else\r\n            tasksElements.push(<div>Nehuma atividade planejada para hoje!</div>)\r\n\r\n        return tasksElements;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='tasks-container'>\r\n                <text>Atividades para {dataFormatada} </text>\r\n                {constructTasks()}\r\n            </div>\r\n            <div className='menu-container'>\r\n                <button onClick={() => setIsOpen(true)}>\r\n                    <FontAwesomeIcon icon={faPlusCircle} color={'green'} fontSize={25}/>\r\n                </button>\r\n            </div>\r\n            <AddTask date={date} isVisible={modalIsOpen} onClose={() => {\r\n                setIsOpen(false);\r\n                const newTasks = getLocalTasks(date);\r\n                stateAction({ tasks: newTasks });\r\n            }} />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TaskList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}