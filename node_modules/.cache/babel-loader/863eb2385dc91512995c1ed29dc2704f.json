{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reina\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Project\\\\my-app\\\\src\\\\Components\\\\TaskList\\\\taskList.js\",\n    _s = $RefreshSig$();\n\nimport { getLocalTasks } from '../../services/localStorageService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './taskList.css';\nimport { useState } from 'react'; // Component que renderiza as tasks registradas para uma data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskList(_ref) {\n  _s();\n\n  let {\n    date\n  } = _ref;\n  const [localTasks, setTasks] = useState([]);\n  const dataFormatada = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n\n  const constructTasks = tasks => {\n    const tasksElements = [];\n    if (tasks) tasks.forEach(task => {\n      tasksElements.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCircleArrowRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: task.taskValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: task.hourValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this));\n    });else tasksElements.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Nehuma atividade planejada para hoje!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 32\n    }, this));\n    return tasksElements;\n  };\n\n  const tasks = getLocalTasks(date);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      children: [\"Atividades para \", dataFormatada, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), constructTasks(tasks)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskList, \"b1kvq4ubEVkSFjdXNuMX7wPqiWc=\");\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["getLocalTasks","FontAwesomeIcon","faCircleArrowRight","faTrash","useState","TaskList","date","localTasks","setTasks","dataFormatada","getDate","getMonth","getFullYear","constructTasks","tasks","tasksElements","forEach","task","push","taskValue","hourValue"],"sources":["C:/Users/reina/OneDrive/Área de Trabalho/Project/my-app/src/Components/TaskList/taskList.js"],"sourcesContent":["import { getLocalTasks } from '../../services/localStorageService';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCircleArrowRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport './taskList.css';\r\nimport { useState } from 'react';\r\n\r\n// Component que renderiza as tasks registradas para uma data\r\nfunction TaskList({ date }) {\r\n    const [localTasks, setTasks] = useState([]);\r\n\r\n    const dataFormatada = ((date.getDate())) + \"/\" + ((date.getMonth() + 1)) + \"/\" + date.getFullYear();\r\n    const constructTasks = (tasks) => {\r\n        const tasksElements = [];\r\n        if (tasks)\r\n            tasks.forEach(task => {\r\n                tasksElements.push(\r\n                    <div className='task-container'>\r\n                        <FontAwesomeIcon icon={faCircleArrowRight} />\r\n                        <text>\r\n                            {task.taskValue}\r\n                        </text>\r\n                        <text>\r\n                            {task.hourValue}\r\n                        </text>\r\n                        <button>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            });\r\n        else\r\n            tasksElements.push(<div>Nehuma atividade planejada para hoje!</div>)\r\n\r\n        return tasksElements;\r\n    }\r\n\r\n    const tasks = getLocalTasks(date);\r\n    return (\r\n        <div className='tasks-container'>\r\n            <text>Atividades para {dataFormatada} </text>\r\n            {constructTasks(tasks)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskList;"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,oCAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,OAAO,gBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;;;AACA,SAASC,QAAT,OAA4B;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EACxB,MAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBJ,QAAQ,CAAC,EAAD,CAAvC;EAEA,MAAMK,aAAa,GAAKH,IAAI,CAACI,OAAL,EAAF,GAAqB,GAArB,IAA6BJ,IAAI,CAACK,QAAL,KAAkB,CAA/C,IAAqD,GAArD,GAA2DL,IAAI,CAACM,WAAL,EAAjF;;EACA,MAAMC,cAAc,GAAIC,KAAD,IAAW;IAC9B,MAAMC,aAAa,GAAG,EAAtB;IACA,IAAID,KAAJ,EACIA,KAAK,CAACE,OAAN,CAAcC,IAAI,IAAI;MAClBF,aAAa,CAACG,IAAd,eACI;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACI,QAAC,eAAD;UAAiB,IAAI,EAAEhB;QAAvB;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UACKe,IAAI,CAACE;QADV;UAAA;UAAA;UAAA;QAAA,QAFJ,eAKI;UAAA,UACKF,IAAI,CAACG;QADV;UAAA;UAAA;UAAA;QAAA,QALJ,eAQI;UAAA,uBACI,QAAC,eAAD;YAAiB,IAAI,EAAEjB;UAAvB;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAcH,CAfD,EADJ,KAkBIY,aAAa,CAACG,IAAd,eAAmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAnB;IAEJ,OAAOH,aAAP;EACH,CAvBD;;EAyBA,MAAMD,KAAK,GAAGd,aAAa,CAACM,IAAD,CAA3B;EACA,oBACI;IAAK,SAAS,EAAC,iBAAf;IAAA,wBACI;MAAA,+BAAuBG,aAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAEKI,cAAc,CAACC,KAAD,CAFnB;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GApCQT,Q;;KAAAA,Q;AAsCT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}