{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reina\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Project\\\\my-app\\\\src\\\\Components\\\\TaskList\\\\taskList.js\";\nimport { updateValues } from '../../services/localStorageService';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './taskList.css'; // Component que renderiza as tasks registradas para uma data\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskList(_ref) {\n  let {\n    date,\n    stateTasks,\n    stateAction\n  } = _ref;\n  const dataFormatada = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n\n  const removeTask = task => {\n    const taskFiltered = stateTasks.tasks.filter(taskItem => taskItem.taskValue != task.taskValue);\n    updateValues(date, taskFiltered);\n    stateAction(taskFiltered);\n  };\n\n  const constructTasks = () => {\n    const tasksElements = [];\n    if (stateTasks.tasks) stateTasks.tasks.forEach(task => {\n      tasksElements.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCircleArrowRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: task.taskValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: task.hourValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            removeTask(task);\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this));\n    });else tasksElements.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Nehuma atividade planejada para hoje!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 32\n    }, this));\n    return tasksElements;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"text\", {\n        children: [\"Atividades para \", dataFormatada, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), constructTasks()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {\n      date: daySelected,\n      isVisible: modalIsOpen,\n      onClose: () => {\n        setIsOpen(false);\n        setTask(getLocalTasks(daySelected));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["updateValues","FontAwesomeIcon","faCircleArrowRight","faTrash","TaskList","date","stateTasks","stateAction","dataFormatada","getDate","getMonth","getFullYear","removeTask","task","taskFiltered","tasks","filter","taskItem","taskValue","constructTasks","tasksElements","forEach","push","hourValue","daySelected","modalIsOpen","setIsOpen","setTask","getLocalTasks"],"sources":["C:/Users/reina/OneDrive/Área de Trabalho/Project/my-app/src/Components/TaskList/taskList.js"],"sourcesContent":["import { updateValues } from '../../services/localStorageService';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCircleArrowRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport './taskList.css';\r\n\r\n// Component que renderiza as tasks registradas para uma data\r\nfunction TaskList({ date, stateTasks, stateAction }) {\r\n\r\n    const dataFormatada = ((date.getDate())) + \"/\" + ((date.getMonth() + 1)) + \"/\" + date.getFullYear();\r\n\r\n    const removeTask = (task) => {\r\n        const taskFiltered = stateTasks.tasks.filter(taskItem => taskItem.taskValue != task.taskValue);\r\n        updateValues(date, taskFiltered);\r\n        stateAction(taskFiltered);\r\n    }\r\n\r\n    const constructTasks = () => {\r\n        const tasksElements = [];\r\n        if (stateTasks.tasks)\r\n            stateTasks.tasks.forEach(task => {\r\n                tasksElements.push(\r\n                    <div className='task-container'>\r\n                        <FontAwesomeIcon icon={faCircleArrowRight} />\r\n                        <text>\r\n                            {task.taskValue}\r\n                        </text>\r\n                        <text>\r\n                            {task.hourValue}\r\n                        </text>\r\n                        <button onClick={() => { removeTask(task) }}>\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                        </button>\r\n                    </div>\r\n                )\r\n            });\r\n        else\r\n            tasksElements.push(<div>Nehuma atividade planejada para hoje!</div>)\r\n\r\n        return tasksElements;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className='tasks-container'>\r\n                <text>Atividades para {dataFormatada} </text>\r\n                {constructTasks()}\r\n            </div>\r\n            <AddTask date={daySelected} isVisible={modalIsOpen} onClose={() => { setIsOpen(false); setTask(getLocalTasks(daySelected)) }} />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TaskList;"],"mappings":";AAAA,SAASA,YAAT,QAA6B,oCAA7B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,kBAAT,QAAmC,mCAAnC;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,OAAO,gBAAP,C,CAEA;;;;AACA,SAASC,QAAT,OAAqD;EAAA,IAAnC;IAAEC,IAAF;IAAQC,UAAR;IAAoBC;EAApB,CAAmC;EAEjD,MAAMC,aAAa,GAAKH,IAAI,CAACI,OAAL,EAAF,GAAqB,GAArB,IAA6BJ,IAAI,CAACK,QAAL,KAAkB,CAA/C,IAAqD,GAArD,GAA2DL,IAAI,CAACM,WAAL,EAAjF;;EAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;IACzB,MAAMC,YAAY,GAAGR,UAAU,CAACS,KAAX,CAAiBC,MAAjB,CAAwBC,QAAQ,IAAIA,QAAQ,CAACC,SAAT,IAAsBL,IAAI,CAACK,SAA/D,CAArB;IACAlB,YAAY,CAACK,IAAD,EAAOS,YAAP,CAAZ;IACAP,WAAW,CAACO,YAAD,CAAX;EACH,CAJD;;EAMA,MAAMK,cAAc,GAAG,MAAM;IACzB,MAAMC,aAAa,GAAG,EAAtB;IACA,IAAId,UAAU,CAACS,KAAf,EACIT,UAAU,CAACS,KAAX,CAAiBM,OAAjB,CAAyBR,IAAI,IAAI;MAC7BO,aAAa,CAACE,IAAd,eACI;QAAK,SAAS,EAAC,gBAAf;QAAA,wBACI,QAAC,eAAD;UAAiB,IAAI,EAAEpB;QAAvB;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA,UACKW,IAAI,CAACK;QADV;UAAA;UAAA;UAAA;QAAA,QAFJ,eAKI;UAAA,UACKL,IAAI,CAACU;QADV;UAAA;UAAA;UAAA;QAAA,QALJ,eAQI;UAAQ,OAAO,EAAE,MAAM;YAAEX,UAAU,CAACC,IAAD,CAAV;UAAkB,CAA3C;UAAA,uBACI,QAAC,eAAD;YAAiB,IAAI,EAAEV;UAAvB;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QARJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAcH,CAfD,EADJ,KAkBIiB,aAAa,CAACE,IAAd,eAAmB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAnB;IAEJ,OAAOF,aAAP;EACH,CAvBD;;EAyBA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACI;QAAA,+BAAuBZ,aAAvB;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKW,cAAc,EAFnB;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI,QAAC,OAAD;MAAS,IAAI,EAAEK,WAAf;MAA4B,SAAS,EAAEC,WAAvC;MAAoD,OAAO,EAAE,MAAM;QAAEC,SAAS,CAAC,KAAD,CAAT;QAAkBC,OAAO,CAACC,aAAa,CAACJ,WAAD,CAAd,CAAP;MAAqC;IAA5H;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;KA7CQpB,Q;AA+CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}